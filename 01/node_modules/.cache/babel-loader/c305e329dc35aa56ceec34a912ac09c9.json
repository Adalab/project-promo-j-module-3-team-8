{"ast":null,"code":"var _jsxFileName = \"/Users/elenagallego/Desktop/project-promo-j-module-3-team-8/01/src/components/CardMaker/CardMaker.js\";\nimport React from \"react\";\nimport Form from \"./Form/Form\";\nimport Preview from \"./Preview\";\nimport Footer from \"../Footer\";\nimport Header from \"../Header\";\n\nclass CardMaker extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userInfo: {\n        palette: \"\",\n        //antes colorSelected\n        name: \"\",\n        job: \"\",\n        photo: \"\",\n        email: \"\",\n        phone: \"\",\n        //antes telephone\n        linkedin: \"\",\n        //antes linkedIn\n        github: \"\" //antes gitHubZ}\n\n      },\n      activePanel: \"collapse-1\"\n    };\n    this.handleInfo = this.handleInfo.bind(this);\n    this.handleCollapse = this.handleCollapse.bind(this);\n  } //Modifica el valor de UserInfo con los datos recogidos en el input del formulario\n\n\n  handleInfo(inputId, inputValue) {\n    this.setState(prevState => {\n      return {\n        userInfo: { ...prevState.userInfo,\n          [inputId]: inputValue\n        }\n      };\n    });\n  }\n\n  handleCollapse(targetId) {\n    //si el colapsable que he clickado es distinto que el guardado en el estado, seteo de nuevo el estado\n    //con el valor del colapsable clickado, en caso contrario reseteo el valor del colapsable\n    if (targetId !== this.state.activePanel) {\n      this.setState({\n        activePanel: targetId\n      });\n    } else {\n      this.setState({\n        activePanel: \"\"\n      });\n    }\n  }\n\n  render() {\n    //console.log(this.state);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"main\", {\n      className: \"main__grid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Preview, {\n      userInfo: this.state.userInfo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Form, {\n      getInformation: this.handleInfo,\n      activePanel: this.state.activePanel,\n      handleCollapse: this.handleCollapse,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default CardMaker;","map":{"version":3,"sources":["/Users/elenagallego/Desktop/project-promo-j-module-3-team-8/01/src/components/CardMaker/CardMaker.js"],"names":["React","Form","Preview","Footer","Header","CardMaker","Component","constructor","props","state","userInfo","palette","name","job","photo","email","phone","linkedin","github","activePanel","handleInfo","bind","handleCollapse","inputId","inputValue","setState","prevState","targetId","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,MAAP,MAAmB,WAAnB;;AAEA,MAAMC,SAAN,SAAwBL,KAAK,CAACM,SAA9B,CAAwC;AACtCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,OAAO,EAAE,EADD;AACK;AACbC,QAAAA,IAAI,EAAE,EAFE;AAGRC,QAAAA,GAAG,EAAE,EAHG;AAIRC,QAAAA,KAAK,EAAE,EAJC;AAKRC,QAAAA,KAAK,EAAE,EALC;AAMRC,QAAAA,KAAK,EAAE,EANC;AAMG;AACXC,QAAAA,QAAQ,EAAE,EAPF;AAOM;AACdC,QAAAA,MAAM,EAAE,EARA,CAQI;;AARJ,OADC;AAWXC,MAAAA,WAAW,EAAE;AAXF,KAAb;AAaA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBD,IAApB,CAAyB,IAAzB,CAAtB;AACD,GAlBqC,CAmBtC;;;AACAD,EAAAA,UAAU,CAACG,OAAD,EAAUC,UAAV,EAAsB;AAC9B,SAAKC,QAAL,CAAeC,SAAD,IAAe;AAC3B,aAAO;AACLhB,QAAAA,QAAQ,EAAE,EACR,GAAGgB,SAAS,CAAChB,QADL;AAER,WAACa,OAAD,GAAWC;AAFH;AADL,OAAP;AAMD,KAPD;AAQD;;AAEDF,EAAAA,cAAc,CAACK,QAAD,EAAW;AACvB;AACA;AACA,QAAIA,QAAQ,KAAK,KAAKlB,KAAL,CAAWU,WAA5B,EAAyC;AACvC,WAAKM,QAAL,CAAc;AAAEN,QAAAA,WAAW,EAAEQ;AAAf,OAAd;AACD,KAFD,MAEO;AACL,WAAKF,QAAL,CAAc;AAAEN,QAAAA,WAAW,EAAE;AAAf,OAAd;AACD;AACF;;AAEDS,EAAAA,MAAM,GAAG;AACP;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAM,MAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,OAAD;AAAS,MAAA,QAAQ,EAAE,KAAKnB,KAAL,CAAWC,QAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,IAAD;AACE,MAAA,cAAc,EAAE,KAAKU,UADvB;AAEE,MAAA,WAAW,EAAE,KAAKX,KAAL,CAAWU,WAF1B;AAGE,MAAA,cAAc,EAAE,KAAKG,cAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAFF,eAUE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,CADF;AAcD;;AAzDqC;;AA2DxC,eAAejB,SAAf","sourcesContent":["import React from \"react\";\r\nimport Form from \"./Form/Form\";\r\nimport Preview from \"./Preview\";\r\nimport Footer from \"../Footer\";\r\nimport Header from \"../Header\";\r\n\r\nclass CardMaker extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userInfo: {\r\n        palette: \"\", //antes colorSelected\r\n        name: \"\",\r\n        job: \"\",\r\n        photo: \"\",\r\n        email: \"\",\r\n        phone: \"\", //antes telephone\r\n        linkedin: \"\", //antes linkedIn\r\n        github: \"\", //antes gitHubZ}\r\n      },\r\n      activePanel: \"collapse-1\",\r\n    };\r\n    this.handleInfo = this.handleInfo.bind(this);\r\n    this.handleCollapse = this.handleCollapse.bind(this);\r\n  }\r\n  //Modifica el valor de UserInfo con los datos recogidos en el input del formulario\r\n  handleInfo(inputId, inputValue) {\r\n    this.setState((prevState) => {\r\n      return {\r\n        userInfo: {\r\n          ...prevState.userInfo,\r\n          [inputId]: inputValue,\r\n        },\r\n      };\r\n    });\r\n  }\r\n\r\n  handleCollapse(targetId) {\r\n    //si el colapsable que he clickado es distinto que el guardado en el estado, seteo de nuevo el estado\r\n    //con el valor del colapsable clickado, en caso contrario reseteo el valor del colapsable\r\n    if (targetId !== this.state.activePanel) {\r\n      this.setState({ activePanel: targetId });\r\n    } else {\r\n      this.setState({ activePanel: \"\" });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    //console.log(this.state);\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <main className=\"main__grid\">\r\n          <Preview userInfo={this.state.userInfo} />\r\n          <Form\r\n            getInformation={this.handleInfo}\r\n            activePanel={this.state.activePanel}\r\n            handleCollapse={this.handleCollapse}\r\n          />\r\n        </main>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default CardMaker;\r\n"]},"metadata":{},"sourceType":"module"}